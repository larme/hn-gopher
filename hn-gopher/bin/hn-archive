#!/usr/bin/env python3
"""
This script takes a snapshot of the current content on the gopher /live page
and transfers it to a new directory in /archive.

This involves overwriting all of the links to /live in the gophermap files.
"""

import os
import shutil
import logging
import tempfile
import argparse
import subprocess
from datetime import datetime
from logging.handlers import RotatingFileHandler


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--log-file')
    parser.add_argument('--data-dir', default='/var/gopher')
    return parser.parse_args()


def setup_log(filename):
    logger = logging.getLogger('hn-archive')
    logger.setLevel(logging.INFO)

    if filename:
        handler = RotatingFileHandler(
            filename=filename, maxBytes=5*1024*1024, backupCount=5)
    else:
        handler = logging.StreamHandler()

    fmt = logging.Formatter('%(asctime)s:%(levelname)s:%(filename)s:%(message)s')
    handler.setFormatter(fmt)
    logger.addHandler(handler)
    return logger


##############################################################################
# Main
##############################################################################
args = parse_args()

_logger = setup_log(args.log_file)

now = datetime.utcnow()
_logger.info('Building archive for {:%Y-%m-%d}'.format(now))

try:
    # Stage everything in a temporary directory
    with tempfile.TemporaryDirectory() as tmp_dir:
        _logger.info('Setting up staging directory %s', tmp_dir)
        os.chmod(tmp_dir, 0o755)

        live_dir = args.data_dir + '/live'
        tmp_archive_dir = tmp_dir + '/archive'

        _logger.info('Copying %s directory to staging', live_dir)
        shutil.copytree(live_dir, tmp_archive_dir)

        patterns = [
            's|^1HN Gopher Live Feed|1HN Gopher Archive [{:%Y-%m-%d}]|g',
            's|^1HN GOPHER LIVE FEED|1HN GOPHER ARCHIVE [{:%Y-%m-%d}]|g',
            's|^iHN GOPHER LIVE FEED|iHN GOPHER ARCHIVE [{:%Y-%m-%d}]|g',
            's|^iHN Gopher Feed|iHN Gopher Feed [{:%Y-%m-%d}]|g',
            's|	/live/|	/archive/{0:%Y}/{0:%Y-%m-%d}/|g']

        for pattern in patterns:
            find_cmd = 'find {} -name gophermap -type f -print0'.format(tmp_archive_dir)
            sed_cmd = 'xargs -0 sed -i "{}"'.format(pattern.format(now))
            cmd = find_cmd + ' | ' + sed_cmd
            _logger.info('Issuing command: %s', cmd)
            subprocess.check_call(cmd, shell=True)

        update_gophermap = True
        archive_dir = args.data_dir + '/archive/{0:%Y}/{0:%Y-%m-%d}'.format(now)
        _logger.info('Copying staging directory to %s', archive_dir)
        if os.path.exists(archive_dir):
            _logger.warning('Destination folder already exists, overwriting')
            update_gophermap = False
            shutil.rmtree(archive_dir, ignore_errors=True)
        shutil.copytree(tmp_archive_dir, archive_dir)

    if update_gophermap:
        gophermap = args.data_dir + '/archive/{:%Y}/gophermap'.format(now)
        gophermap_exists = os.path.exists(gophermap)
        with open(gophermap, 'a') as fp:
            if not gophermap_exists:
                _logger.info('Generating header for %s', gophermap)
                fp.writelines([
                    '1HN Gopher Home\t/\n',
                    'i \n',
                    'i      ___ _  _ ____    ____ ____ ____ _  _ _ _  _ ____\n',
                    'i       |  |__| |___    |__| |__/ |    |__| | |  | |___\n',
                    'i       |  |  | |___    |  | |  \ |___ |  | |  \/  |___\n',
                    'i \n',
                    'i                                   __\n',
                    'i                                  /__\\\n',
                    'i                      ____________|  |\n',
                    'i                      |_|_|_|_|_|_|  |\n',
                    'i                      |_|_|_|_|_|_|__|\n',
                    'i                     A@\|_|_|_|_|_|/@@Aa\n',
                    'i                 aaA@@@@@@@@@@@@@@@@@@@aaaA\n',
                    'i                A@@@@@@@@@@@DWB@@@@@@@@@@@@A\n',
                    'i              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                    'i \n',
                    'iThis directory contains historical snapshots of the stories on\n',
                    'ithe /live page. New entries are added daily at midnight (EST).\n',
                    'i \n',
                    '1..\t/archive\n'])
            _logger.info('Appending a link to p1 to the gophermap')
            fp.write('1HN Gopher Feed ({0:%Y-%m-%d})	/archive/{0:%Y}/{0:%Y-%m-%d}/p1\n'.format(now))

except Exception as e:
    _logger.exception(e)
    raise e

else:
    _logger.info('Finished!')
